sap.ui.define(["sap/fe/core/PageController","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/MessageToast","sap/ui/core/Fragment"],function(e,t,o,a,r){"use strict";return e.extend("monitorfacturas.detallesfactura.ext.view.Informaciongeneral",{onAfterRendering:function(){console.log("✔️ onAfterRendering ejecutado");setTimeout(()=>{this.mostrarPdfEnIframe()},500);const e=new sap.ui.model.json.JSONModel({modoEdicion:false});this.getView().setModel(e,"view")},mostrarPdfEnIframe:function(){const e=this.byId("pdfEmbed");const t=this.getView().getBindingContext();if(!t){console.error("No hay contexto de factura");return}const o=t.getProperty("NumeroFactura");const a=this.getOwnerComponent().getModel();const r=a.sServiceUrl;const n=r+"/Facturas('"+o+"')/archivoPDF/$value";const s=`\n                <iframe\n                    src="${n}"\n                    width="100%"\n                    height="800px"\n                    style="border: none;"\n                ></iframe>\n            `;e.setContent(s)},onSeleccionarComprador:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();if(!o){sap.m.MessageToast.show("No hay contexto de factura disponible.");return}try{o.setProperty("Estado","Validación Compras");await t.submitBatch("$auto");sap.m.MessageToast.show("Estado actualizado correctamente");sap.ui.getCore().getEventBus().publish("Facturas","ActualizarLista");history.back()}catch(e){console.error("Error al actualizar el estado:",e);sap.m.MessageBox.error("No se pudo actualizar el estado.")}},onSeleccionarAlmacenista:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();if(!o){sap.m.MessageToast.show("No hay contexto de factura disponible.");return}try{o.setProperty("Estado","Validación Almacenista");await t.submitBatch("$auto");sap.m.MessageToast.show("Estado actualizado correctamente");sap.ui.getCore().getEventBus().publish("Facturas","ActualizarLista");history.back()}catch(e){console.error("Error al actualizar el estado:",e);sap.m.MessageBox.error("No se pudo actualizar el estado.")}},onSeleccionarBot:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();if(!o){sap.m.MessageToast.show("No hay contexto de factura disponible.");return}try{o.setProperty("Estado","ERP Validando");await t.submitBatch("$auto");sap.m.MessageToast.show("Estado actualizado correctamente");sap.ui.getCore().getEventBus().publish("Facturas","ActualizarLista");history.back()}catch(e){console.error("Error al actualizar el estado:",e);sap.m.MessageBox.error("No se pudo actualizar el estado.")}},onSeleccionarContabilidad:function(){sap.m.MessageToast.show("Rol seleccionado: Contabilidad")},editarFactura:function(){const e=this.getView().getBindingContext();if(!e){console.error("No hay contexto de factura");return}const t={Estado:e.getProperty("Estado"),Urgente:e.getProperty("Urgente"),Descuento:e.getProperty("Descuento"),Comentario:e.getProperty("Comentario"),FechaFactura:e.getProperty("FechaFactura"),FechaContabilizacion:e.getProperty("FechaContabilizacion"),FechaVencimiento:e.getProperty("FechaVencimiento"),FechaRecepcion:e.getProperty("FechaRecepcion"),FormaPago:e.getProperty("FormaPago"),CodigoActividad:e.getProperty("CodigoActividad"),Clasificacion:e.getProperty("Clasificacion"),Area:e.getProperty("Area"),Sede:e.getProperty("Sede"),DocumentoMIRO:e.getProperty("DocumentoMIRO"),DocumentoFI:e.getProperty("DocumentoFI")};this.getView().getModel("view").setProperty("/datosOriginales",t);this.getView().getModel("view").setProperty("/modoEdicion",true)},onGuardar:function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();const a=e.getModel("view").getProperty("/datosOriginales");let r=false;Object.entries(a).forEach(([e,t])=>{const a=o.getProperty(e);if(a!==t){r=true}});if(!r){sap.m.MessageToast.show("No hay cambios para guardar.");return}t.submitBatch("$auto").then(()=>{e.getModel("view").setProperty("/modoEdicion",false);e.getModel("view").setProperty("/datosOriginales",null);sap.m.MessageToast.show("Cambios guardados correctamente.")}).catch(e=>{console.error("Error al guardar cambios:",e);sap.m.MessageBox.error("Error al guardar los cambios.")})},onCancelar:function(){const e=this.getView();const t=e.getBindingContext();const o=e.getModel("view").getProperty("/datosOriginales");if(!t||!o){sap.m.MessageToast.show("No se pueden restaurar los datos.");return}Object.entries(o).forEach(([e,o])=>{t.setProperty(e,o)});e.getModel("view").setProperty("/modoEdicion",false);e.getModel("view").setProperty("/datosOriginales",null);sap.m.MessageToast.show("Cambios descartados.")},onDetallePress:function(e){var t=e.getSource();var o=t.getParent();var a=o.getBindingContext();var r=a.getProperty("NumeroEntrada");var n="#monitorfacturasentradas-display&/Entrada('"+r+"')";window.open(n,"_blank")},onDetallePressOrdenIndividual:function(e){var t=e.getSource();var o=t.getParent();var r=o.getBindingContext();var n=r.getProperty("NumeroMaterial");var s=this.getView().getModel();var i="NumeroMaterial eq '"+n+"'";s.bindList("/DetalleOrdenCompra",null,null,null,{$filter:i}).requestContexts().then(function(e){if(e.length>0){var t=e[0].getObject();var o=t.ID;var r="#monitorfacturasdetalleorden-display&/DetalleOrdenCompra(ID="+o+",IsActiveEntity=true)";window.open(r,"_blank")}else{a.show("No se encontró el material.")}}).catch(function(){a.show("Error al consultar DetalleOrdenCompra.")})},onDetallePressOrden:function(e){var t=e.getSource();var o=t.getParent();var a=o.getBindingContext();var r=a.getProperty("NumeroOrden");var n="#monitorfacturasordendecompra-display&/OrdenCompra('"+r+"')";window.open(n,"_blank")},onInsertOrdenCompra:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();if(!o){sap.m.MessageToast.show("No hay contexto de factura.");return}const a=o.getProperty("Proveedor/CodigoSap");const r=o.getProperty("NumeroFactura");if(!a||!r){sap.m.MessageToast.show("Datos incompletos en la factura.");return}try{const o=await t.bindList("/OrdenCompra",null,null,null,{$filter:`Proveedor/CodigoSap eq '${a}'`}).requestContexts();const n=o.map(e=>e.getObject());const s=await t.bindList("/FacturaOrdenCompra",null,null,null,{$filter:`Factura/NumeroFactura eq '${r}'`}).requestContexts();const i=s.map(e=>e.getObject().Orden_NumeroOrden);const c=n.filter(e=>!i.includes(e.NumeroOrden));c.unshift({NumeroOrden:"",textoVisible:"Seleccionar"});const l=new sap.ui.model.json.JSONModel({Ordenes:c});e.setModel(l,"ordenesProveedor");const d=new sap.ui.model.json.JSONModel({Posiciones:[]});e.setModel(d,"detalleOrden")}catch(e){console.error("Error al consultar órdenes:",e);sap.m.MessageToast.show("Error cargando órdenes disponibles.");return}if(this._oDialogInsertOrden){this._oDialogInsertOrden.destroy(true);this._oDialogInsertOrden=null;this._fragmentId=null;await new Promise(e=>setTimeout(e,0))}try{const t=e.createId("InsertOrdenCompraFragment");const o=await sap.ui.core.Fragment.load({id:t,name:"monitorfacturas.detallesfactura.ext.view.fragments.FragmentInsertOrdenCompra",controller:this});this._fragmentId=t;this._oDialogInsertOrden=o;e.addDependent(o);o.open();setTimeout(()=>{const e=sap.ui.core.Fragment.byId(this._fragmentId,"selectOrdenCompra");if(e)e.setSelectedKey("");const t=sap.ui.core.Fragment.byId(this._fragmentId,"multiSelectPosiciones");if(t)t.removeSelections(true)},0)}catch(e){console.error("Error al cargar el fragmento:",e);sap.m.MessageBox.error("No se pudo abrir el formulario de orden.")}},onOrdenSeleccionada:async function(e){const t=e.getSource().getSelectedKey();const o=this.getView();const a=o.getModel();if(!t){return}try{const e=await a.bindList("/DetalleOrdenCompra",null,null,null,{$filter:`NumeroOrden/NumeroOrden eq '${t}'`}).requestContexts();const r=e.map(e=>e.getObject());const n=await a.bindList("/DetalleFacturaOrden",null,null,null,{$filter:`Orden/NumeroOrden eq '${t}'`}).requestContexts();const s=n.map(e=>e.getObject().Posicion_ID);const i=r.filter(e=>!s.includes(e.ID));const c=new sap.ui.model.json.JSONModel({Posiciones:i});o.setModel(c,"detalleOrden")}catch(e){console.error("Error al cargar o filtrar posiciones:",e);sap.m.MessageToast.show("No se pudieron cargar las posiciones disponibles.")}},onGuardarOrdenCompra:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();const a=o.getProperty("NumeroFactura");const r=sap.ui.core.Fragment.byId(this._fragmentId,"selectOrdenCompra");const n=r?.getSelectedKey();if(!n){sap.m.MessageToast.show("Debe seleccionar una orden de compra.");return}const s=sap.ui.core.Fragment.byId(this._fragmentId,"multiSelectPosiciones");const i=s.getSelectedItems();if(i.length===0){sap.m.MessageToast.show("Debe seleccionar al menos una posición.");return}try{const e=await t.bindList("/FacturaOrdenCompra",null,null,null,{$filter:`Factura/NumeroFactura eq '${a}' and Orden/NumeroOrden eq '${n}'`}).requestContexts();if(e.length===0){const e=t.bindList("/FacturaOrdenCompra",null,null,null,{$$groupId:"$auto"});e.create({Factura_NumeroFactura:a,Orden_NumeroOrden:n,FechaAsignacion:(new Date).toISOString().split("T")[0]})}const r=await t.bindList("/DetalleFacturaOrden",null,null,null,{$filter:`Factura/NumeroFactura eq '${a}' and Orden/NumeroOrden eq '${n}'`}).requestContexts();const s=r.map(e=>e.getObject().Posicion_ID);const c=t.bindList("/DetalleFacturaOrden",null,null,null,{$$groupId:"$auto"});let l=0;for(const e of i){const t=e.getBindingContext("detalleOrden");const o=t.getObject();if(s.includes(o.ID)){console.log("Ya existe:",o.ID);continue}c.create({Factura_NumeroFactura:a,Orden_NumeroOrden:n,Posicion_ID:o.ID});l++}await t.submitBatch("$auto");if(l>0){sap.m.MessageToast.show(`${l} posiciones asociadas correctamente.`)}else{sap.m.MessageToast.show("Todas las posiciones ya estaban asociadas.")}if(this._oDialogInsertOrden){this._oDialogInsertOrden.destroy(true);this._oDialogInsertOrden=null;this._fragmentId=null}await o.refresh()}catch(e){console.error("Error al guardar asociación:",e);sap.m.MessageBox.error("Ocurrió un error al asociar la orden a la factura.")}},onCancelarOrdenCompra:function(){if(this._oDialogInsertOrden){this._oDialogInsertOrden.close()}},onInsertEntrada:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();if(!o){sap.m.MessageToast.show("No hay contexto de factura.");return}const a=o.getProperty("NumeroFactura");if(!a){sap.m.MessageToast.show("No se encontró el número de factura.");return}try{const o=await t.bindList("/FacturaOrdenCompra",null,null,null,{$filter:`Factura/NumeroFactura eq '${a}'`,$expand:"Orden"}).requestContexts();const r=o.map(e=>e.getObject()?.Orden).filter(e=>!!e);if(r.length===0){sap.m.MessageToast.show("No hay órdenes asociadas a esta factura.");return}const n=new sap.ui.model.json.JSONModel({Ordenes:r});e.setModel(n,"ordenesFactura");const s=new sap.ui.model.json.JSONModel({Posiciones:[]});e.setModel(s,"detalleEntrada");if(this._crearEntradaDialog){this._crearEntradaDialog.destroy(true);this._crearEntradaDialog=null;this._crearEntradaFragmentId=null}const i=e.createId("CrearEntradaFragment");const c=await sap.ui.core.Fragment.load({id:i,name:"monitorfacturas.detallesfactura.ext.view.fragments.FragmentInsertEntrada",controller:this});this._crearEntradaDialog=c;this._crearEntradaFragmentId=i;e.addDependent(c);c.open()}catch(e){console.error("Error cargando fragmento de entrada:",e);sap.m.MessageBox.error("No se pudo abrir el formulario de entrada.")}},onGuardarEntrada:async function(){const e=this.getView();const t=e.getModel();const o=e.getBindingContext();const a=this._crearEntradaFragmentId;const r=sap.ui.core.Fragment.byId(a,"numeroEntrada");const n=sap.ui.core.Fragment.byId(a,"selectOrdenEntrada");const s=r?.getValue();const i=n?.getSelectedKey();const c=o?.getProperty("NumeroFactura");const l=(new Date).toISOString().split("T")[0];if(!c||!s||!i){sap.m.MessageBox.warning("Complete todos los campos obligatorios.");return}try{const e=t.bindList("/Entrada",null,null,null,{$$groupId:"$auto"});e.create({NumeroEntrada:s,FechaEmision:l,FechaRecepcion:l,NumeroFactura_NumeroFactura:c,Orden_NumeroOrden:i});await t.submitBatch("$auto");if(this._crearEntradaDialog){this._crearEntradaDialog.destroy(true);this._crearEntradaDialog=null;this._crearEntradaFragmentId=null}sap.m.MessageToast.show("Entrada registrada correctamente.");if(o){await o.refresh()}}catch(e){console.error("Error al guardar entrada:",e);sap.m.MessageBox.error("No se pudo registrar la entrada.")}},onCancelarEntrada:function(){if(this._crearEntradaDialog){this._crearEntradaDialog.destroy(true);this._crearEntradaDialog=null}},onAbrirDialogoAdjuntos:function(){const e=this.getView();if(!this._dialogAdjunto){sap.ui.core.Fragment.load({id:e.getId(),name:"monitorfacturas.detallesfactura.ext.view.fragments.DialogoAdjunto",controller:this}).then(t=>{this._dialogAdjunto=t;e.addDependent(this._dialogAdjunto);this._dialogAdjunto.open()})}else{this._dialogAdjunto.open()}},onBeforeItemAdded:function(e){const t=e.getParameter("item");t.getFileObject().then(e=>{this._archivoSeleccionado=e})},onSubirAdjunto:async function(){const e=this._archivoSeleccionado;if(!e){sap.m.MessageToast.show("Seleccione un archivo primero.");return}const t=new FileReader;t.onload=async t=>{const o=t.target.result.split(",")[1];const a=e.name;const r=e.type;const n=this.getView().getBindingContext();const s=this.getView().getModel();const i=s.bindList("Adjuntos",n,null,null,{$$groupId:"$auto"});i.create({NombreArchivo:a,TipoArchivo:r,ArchivoBase64:o});await s.submitBatch("$auto");sap.m.MessageToast.show("Documento adjunto cargado correctamente.");this.byId("dialogAdjunto").close();this._archivoSeleccionado=null;await n.refresh()};t.readAsDataURL(e)},onCerrarDialogoAdjunto:function(){this.byId("dialogAdjunto").close()}})});
//# sourceMappingURL=Informaciongeneral.controller.js.map